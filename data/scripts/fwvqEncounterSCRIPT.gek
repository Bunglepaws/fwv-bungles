scn fwvqEncounterSCRIPT

float fSecondsPassed
short button
short turnCount
float chance						;chance of encounter happening
short wasDrifting				;1 - was in spaceflight before, if true, turns back on AFTER combat ends
short encounter				;1 - initiating the type of encounter, 2 - initating the stats for the ship/anomaly
short encounterType			;1 - Combat, 2 - Anomaly
float enemyHP					;The enemy ship HP
float enemyDef					;The enemy ship Defense
short enemyType				;1 - Dalek, 2 - Cyberman, 3 - Zetan, 4 - Time Raider, 5 - Auton
short ienemyCharge			;The base enemy Charge
short enemyCharge			;How many turnCounts it will take before the Enemy can fire
float enemyDmg				;The amount of damage randomly generated by the Enemy firepower
short combat					;If true, Combat initiated
float tEvade						;The TARDIS Evasion var
float eEvade					;The Enemy Evasion var
short evasion					;If true, you can no longer attempt to evade
short eTurn						;If true, it's the Enemies turnCount
short eLastAction				;Stores enemies last action (1-charge,2-attack,3-board)
float eTimer						;Enemy timer
float pTimer						;Player timer
short playerDefensive		;If true, the player has chosen to boost their defenses for 1 turnCount
short eChoice					;The Enemy 'AI' choice
short tAction					;Players action
									;1 - Attack, 2 - Defend, 3 - Scan, 4 - Evade, 5 - Surf
short looping					;Used for Time Loop protocol
short tLastAction				; Player's action after tAction is reset (anomaly mode only)
float tAttack						;Players Attack chance
float tDmg						;Players Attack damage
float rSpawn					;determines which spawn point the enemy spawns at in the TARDIS
float randDmg
float mutualDmg			; damage taken for TARDIS and enemy together

string_var enemyName		;stores the enemy name

float anomalyDmg				;How powerful the Anomaly is
float aDistance					;How long until the Anomaly hits
float aCalc						;scan timer for anomaly
float aTimer						;Anomaly timer
short anomaly					;If true, the TARDIS is in the collision path of the anomaly
float tBonusDef				;Bonus Defence %
float aSurfRwd					;the Type of Surf Reward granted
string_var rWord1				;Anomaly name 1
string_var rWord2				;Anomaly name 2
float word1
float word2

short reward					; 1 - Combat rewards, 2 - Anomaly rewards
float rChance
float rXp
float rUnique
float rItemNum
float pxlBonus
int rItemNumInt

float rItemId
ref rItem

ref rRandCtrlRef
ref rCurExplosion
short sRandCtrl
float fExplosionTimer

ref rTChandbrakeRef
ref rTChelmicRef1
ref rTCatomicRef1
ref rTCpointerRef1
ref rTCvortexRef1
ref rTCzigzagRef1
ref rTCnavicompRef1
ref rTCgyroRef1
ref rTCmechanicalRef1
ref rTCartronRef1
ref rTCrepairRef1
ref rTCtimeControllerRef1
ref rTCengineRef1
ref rTCthrottleRef1
ref rTClockdownRef1
ref rTCastronavRef1
ref rTCdriftRef1
ref rTCproximityRef1
ref rLightBlue
ref rLightRed
ref rLightNormal
ref rCloister

float fxTimer
short aFx
short tDamageFx
short sRandCtrl 

short sSpecifiedType ; pre-specified encounter type for combat AND anomalies
short sRepeat ; times anomaly should repeat
short sRepeatedTimes ; times repeated anomaly
float fCalc

Begin Gamemode

	if fwvq1.rTChandbrakeRef != 0 ; don't do anything if the controls aren't set yet
		set rTChandbrakeRef to fwvq1.rTChandbrakeRef
		set rTChelmicRef1 to fwvq1.rTChelmicRef1
		set rTCatomicRef1 to fwvq1.rTCatomicRef1
		set rTCpointerRef1 to fwvq1.rTCpointerRef1
		set rTCvortexRef1 to fwvq1.rTCvortexRef1
		set rTCzigzagRef1 to fwvq1.rTCzigzagRef1
		set rTCnavicompRef1 to fwvq1.rTCnavicompRef1
		set rTCgyroRef1 to fwvq1.rTCgyroRef1
		set rTCmechanicalRef1 to fwvq1.rTCmechanicalRef1
		set rTCartronRef1 to fwvq1.rTCartronRef1
		set rTCrepairRef1 to fwvq1.rTCrepairRef1
		set rTCtimeControllerRef1 to fwvq1.rTCtimeControllerRef1
		set rTCengineRef1 to fwvq1.rTCengineRef1
		set rTCthrottleRef1 to fwvq1.rTCthrottleRef1
		set rTClockdownRef1 to fwvq1.rTClockdownRef1
		set rLightNormal to fwvq1.rLightNormal
		set rLightRed to fwvq1.rLightRed
		set rLightBlue to fwvq1.rLightBlue
		set rCloister to fwvq1.rCloister
		set rTCastronavRef1 to fwvq1.rTCastronavRef1
		set rTCdriftRef1 to fwvq1.rTCdriftRef1
		set rTCproximityRef1 to fwvq1.rTCproximityRef1
	endif

	set fSecondsPassed to getSecondsPassed
	
	; reset random encounter type
	if encounter == 0 && anomaly == 0 && combat == 0 && sSpecifiedType == 0
		set encounterType to 0
		set sRepeatedTimes to 0
		set sRepeat to 0
	endif
	
	if encounter == 1
		;Randomise the type of encounter (Combat or Anomaly)
		if encounterType == 0
			if fwvq1.tSpace == 1 && fwvqDrift.gID == 4							;dalek galaxy encounters
				set encounterType to 3
				set sSpecifiedType to 0
			elseif fwvq1.tSpace == 1 && fwvqDrift.gID == 6					;cyber galaxy encounters
				set encounterType to 3
				set sSpecifiedType to 2
			else
				set encounterType to 1 + getRandomPercent * 2 / 100
			endif
		endif
		set evasion to 0
		set playerDefensive to 0
		set combat to 0
		set anomaly to 0
		set turnCount to 0
		set encounter to 2
		set pTimer to 5
		set fwvq1.csrON to 4
		set tLastAction to 0
		set tAction to 0
	elseif encounter == 2
		if encounterType == 1 ; random combat
			;Generate Combat Enemy stats
			set enemyHP to getRandomPercent + 50
			set enemyDef to 1 + getRandomPercent * 25/100
			set iEnemyCharge to 1 + getRandomPercent * 3/100
			set enemyCharge to 1 + getRandomPercent * 3/100
			set enemyType to 1 + getRandomPercent * 5/100
			if enemyType == 1
				set enemyName to sv_construct "Dalek Attack Saucer"
			elseif enemyType == 2
				set enemyName to sv_construct "Cyber Warship"
			elseif enemyType == 3
				set enemyName to sv_construct "Zetan Inquisitor"
			elseif enemyType == 4
				set enemyName to sv_construct "Raiding Shuttle"
			elseif enemyType == 5
				set enemyName to sv_construct "Nestene Swarm Pod"
			elseif enemyType == 6
				set enemyName to sv_construct "Attack Saucer of the Dalek Elite"
			endif
			set eTimer to 0.0
			set combat to 1
			set anomaly to 0
			set encounter to 0
			ShowMessage fwvCombatStartShipMessage
		elseif encounterType == 2 ; random anomaly
			;Generate Anomaly stats
			;Display some random techno-babble
			set word1 to getRandomPercent / 10
			set word2 to getRandomPercent / 10
			if word1 < 1
				set rWord1 to sv_construct "Temporal"
			elseif word1 < 2
				set rWord1 to sv_construct "Solar"
			elseif word1 < 3
				set rWord1 to sv_construct "Quantum"
			elseif word1 < 4
				set rWord1 to sv_construct "Vortex"
			elseif word1 < 5
				set rWord1 to sv_construct "Dimensional"
			elseif word1 < 6
				set rWord1 to sv_construct "Time"
			elseif word1 < 7
				set rWord1 to sv_construct "Pulsar"
			elseif word1 < 8
				set rWord1 to sv_construct "Chronon"
			elseif word1 < 9
				set rWord1 to sv_construct "Entropic"
			elseif word1 < 10
				set rWord1 to sv_construct "Causal"
			endif
			if word2 < 1
				set rWord2 to sv_construct "Winds"
			elseif word2 < 2
				set rWord2 to sv_construct "Flare"
			elseif word2 < 3
				set rWord2 to sv_construct "Gyre"
			elseif word2 < 4
				set rWord2 to sv_construct "Bubble"
			elseif word2 < 5
				set rWord2 to sv_construct "Embolism"
			elseif word2 < 6
				set rWord2 to sv_construct "Corridor"
			elseif word2 < 7
				set rWord2 to sv_construct "Eddy"
			elseif word2 < 8
				set rWord2 to sv_construct "Distortion"
			elseif word2 < 9
				set rWord2 to sv_construct "Wave"
			elseif word2 < 10
				set rWord2 to sv_construct "Nexus"
			endif
			set anomalyDmg to getRandomPercent + 50							;how much damage it will deal
			set aDistance to 7 + getRandomPercent * 10/100						;how many seconds it will take to reach the TARDIS
			set combat to 0
			set anomaly to 1
			set aTimer to 0.0
			set encounter to 0
			MessageEx "Incoming anomaly. Take action!"
		elseif encounterType == 3 ; specified combat
			;Generate Combat Enemy stats
			
			set enemyHP to getRandomPercent + 50
			set enemyDef to 1 + getRandomPercent * 25/100
			set iEnemyCharge to 1 + getRandomPercent * 3/100
			set enemyCharge to 1 + getRandomPercent * 3/100
			
			if sSpecifiedType == 0 ; Dalek attack saucer
				set enemyType to 1
				set enemyName to sv_construct "Dalek Attack Saucer"

			elseif sSpecifiedType == 1 ; Dalek stealth ship
				set enemyType to 1
				set enemyHP to getRandomPercent + 25
				set enemyDef to 1 + getRandomPercent * 15/100
				set enemyName to sv_construct "Dalek Stealth Saucer"
				set enemyCharge to 1

			elseif sSpecifiedType == 2 ; Cyberman warship
				set enemyType to 2
				set enemyName to sv_construct "Cyber Warship"

			elseif sSpecifiedType == 3 ; Cyber King
				set enemyType to 2
				set enemyName to sv_construct "Cyberking Conversion Ship"
				set iEnemyCharge to 1 + getRandomPercent * 5/100
				set enemyCharge to 2 + getRandomPercent * 3/100

			elseif sSpecifiedType == 5 ; Zetan mothership
				set enemyType to 3
				set enemyName to sv_construct "Zetan Mothership"
				set enemyHP to getRandomPercent + 100
				set iEnemyCharge to 2 + getRandomPercent * 2/100
				set enemyCharge to 2 + getRandomPercent * 3/100

			elseif sSpecifiedType == 6 ; Zetan science vessel
				set enemyType to 3
				set enemyName to sv_construct "Zetan Inquisitor"
				set iEnemyCharge to 2 + getRandomPercent * 2/100

			elseif sSpecifiedType == 7 ; Dalek Boss Flagship
				set enemyType to 1
				set enemyHP to 200
				set enemyDef to 20
				set enemyName to sv_construct "Attack Saucer of the Dalek Elite"
				set enemyCharge to 1
			endif
			set eTimer to 0.0
			set combat to 1
			set anomaly to 0
			set encounter to 0
			ShowMessage fwvCombatStartShipMessage
		elseif encounterType == 4 ; specified anomaly
			;Generate Anomaly stats
			
			if sSpecifiedType == 0 ; time winds
				; deal small amounts of damage repeatedly over time
				set rWord1 to sv_construct "Time"
				set rWord2 to sv_construct "Winds"
				if sRepeatedTimes == 0
					set anomalyDmg to getRandomPercent * 0.4
					set sRepeat to 2 + GetRandomPercent * 2/100
				else
					set anomalyDmg to anomalyDmg / 2.0 ; how much damage it will deal shrinks over time
				endif
				
				set aDistance to 3 + getRandomPercent * 10/100 ;how many seconds it will take to reach the TARDIS
			elseif sSpecifiedType == 1 ; distortion bubble
				; deal very small amounts of damage repeatedly over time, spawning neverwere
				set rWord1 to sv_construct "Distortion"
				set rWord2 to sv_construct "Bubble"
				if sRepeatedTimes == 0
					set anomalyDmg to getRandomPercent * 0.1
					set sRepeat to 2 + GetRandomPercent * 2/100
				else
					set anomalyDmg to anomalyDmg / 2.0 ; how much damage it will deal shrinks over time
				endif
				
				set aDistance to 2 + getRandomPercent * 5/100 ;how many seconds it will take to reach the TARDIS
			else ; dimensional wave
				; deal large amount of damage once
				set rWord1 to sv_construct "Dimensional"
				set rWord2 to sv_construct "Wave"
				set anomalyDmg to (getRandomPercent * 1.25) + 50 ;how much damage it will deal
				set aDistance to 7 + getRandomPercent * 10/100 ;how many seconds it will take to reach the TARDIS
				set sRepeat to 0
				
			endif
			set combat to 0
			set anomaly to 1
			set aTimer to 0.0
			set encounter to 0
			if sRepeatedTimes > 0
				MessageEx "The %z %z anomaly continues!" rWord1 rWord2
			else
				MessageEx "Incoming anomaly. Take action!"
			endif
		endif
	endif

	if anomaly == 1																			;Anomaly section

		set fwvqRooms.fShakeAngleExtra to 5 * Call fwvFuncRange 0 aDistance aTimer
		if fwvqRooms.fShakeAngleExtra > 5
			set fwvqRooms.fShakeAngleExtra to 5
		endif
		
		;player cooldown
		if tLastAction != 2 && tLastAction != 5
			if pTimer < 5.0
				set pTimer to pTimer + fSecondsPassed
			endif
		
			if tAction == 2											;Defensive
				set pTimer to 0.0
				set fwvq1.csrON to 4
				set tLastAction to tAction
			elseif tAction == 3										;Scan
				;set aCalc to aDistance - aTimer
				set fCalc to aDistance - aTimer
				MessageBoxEx "%z %z%rImpact: %g seconds remaining%rMass: %g%%" rWord1 rWord2 fCalc anomalyDmg
				set pTimer to 0.0
				set tAction to 0
				set tLastAction to 0
				set fwvq1.csrON to 4
			elseif tAction == 4										;Evasive
				set tEvade to getRandomPercent
				set eEvade to getRandomPercent
				set pTimer to 0.0
				if tEvade > eEvade
					TriggerHitShader 5
					PlaySound fwvFXtardisLandingShort 1
					MessageEx "Initiating Emergency Dematerialisation..."
					set aTimer to 0.0
					set fwvq1.csrON to 0
					set fwvq1.csrTimer to fwvq1.csrMaxTime
					set anomaly to 0
					set encounter to 0			
					set fwvqRooms.sNeverwereExist to 0
				else
					MessageEx "Emergency Dematerialisation failed..."
					PlaySound fwvFXtardisCrashLanding2
					set evasion to 1
					set tAction to 0
					set fwvq1.csrON to 4
				endif
				set tLastAction to 0
			elseif tAction == 5										; surf
				set pTimer to 0.0
				set fwvq1.csrON to 4
				set tLastAction to tAction
				set tAction to 0
				set fwvqRooms.sNeverwereExist to 0
			endif
		endif

		set tAction to 0 ; reset
		
		if aTimer < aDistance
			set aTimer to aTimer + fSecondsPassed
		else
			if tLastAction == 0
				if encounterType == 4 && sSpecifiedType == 1 && (fwvq1.tShields <= 50 || GetRandomPercent < 75) ; spawn neverwere
					; spawn neverwere
					set fwvqRooms.sNeverwereExist to 1
					set rRandCtrlRef to fwvq1.rTDesktopInteriorDoor
					rRandCtrlRef.PlaceAtMe fwvEncNeverwere 1
				elseif encounterType == 4 && sSpecifiedType == 1 ; despawn neverwere
					set fwvqRooms.sNeverwereExist to 0
				else ; despawn neverwere if not
					set fwvqRooms.sNeverwereExist to 0
				endif
				MessageEx "Damage incurred!"
				
				if fwvq1.pxl > 5
					set pxlBonus to (fwvq1.pxl - 5)
				else
					set pxlBonus to 0
				endif
				
				if fwvq1.tShields > 0
					printc "pxlBonus %g" pxlBonus
					printc "anomalyDmg %g" anomalyDmg
					set anomalyDmg to anomalyDmg - pxlBonus
					printc "anomalyDmg now %g" anomalyDmg	
					set fwvq1.tShields to fwvq1.tShields - anomalyDmg
				else
					if fwvqSystems.tAdvanced == 1
						Call fwvFuncDamageSystemsFunction
					endif
					set fwvq1.tShields to 0
					printc "pxlBonus %g" pxlBonus
					printc "anomalyDmg %g" anomalyDmg
					set anomalyDmg to anomalyDmg - pxlBonus
					printc "anomalyDmg now %g" anomalyDmg	
					set fwvq1.tHull to fwvq1.tHull - anomalyDmg
				endif
				set tDamageFx to 1
			elseif tLastAction == 2
				if fwvq1.pxl > 5
					set pxlBonus to (fwvq1.pxl - 5)
				else
					set pxlBonus to 0
				endif			
				if playerDefensive == 1
					MessageEx "Shield Oscillators absorbing damage..."
					printc "pxlBonus %g" pxlBonus
					printc "anomalyDmg %g" anomalyDmg
					set anomalyDmg to anomalyDmg - pxlBonus
					printc "anomalyDmg now %g" anomalyDmg
					printc "tBonusDef %g" tBonusDef
					set anomalyDmg to anomalyDmg * (1.0 - tBonusDef)
					printc "anomalyDmg now %g" anomalyDmg
					set fwvq1.tShields to fwvq1.tShields - anomalyDmg
					PlaySound FXExplosionNukeSmall2D
					set fwvqRooms.sNeverwereExist to 0
				else
					if encounterType == 4 && sSpecifiedType == 1 && (fwvq1.tShields <= 25 && GetRandomPercent < 75)
						; spawn neverwere
						set fwvqRooms.sNeverwereExist to 1
						set rRandCtrlRef to fwvq1.rTDesktopInteriorDoor
						rRandCtrlRef.PlaceAtMe fwvEncNeverwere 1
					else
						set fwvqRooms.sNeverwereExist to 0
					endif
					MessageEx "Damage incurred!"
					if fwvq1.tShields > 0
						printc "pxlBonus %g" pxlBonus
						printc "anomalyDmg %g" anomalyDmg
						set anomalyDmg to anomalyDmg - pxlBonus
						printc "anomalyDmg now %g" anomalyDmg						
						set fwvq1.tShields to fwvq1.tShields - anomalyDmg
					else
						printc "pxlBonus %g" pxlBonus
						printc "anomalyDmg %g" anomalyDmg
						set anomalyDmg to anomalyDmg - pxlBonus
						printc "anomalyDmg now %g" anomalyDmg					
						set fwvq1.tHull to fwvq1.tHull - anomalyDmg
						if fwvqSystems.tAdvanced == 1
							Call fwvFuncDamageSystemsFunction
						endif
					endif
					set tDamageFx to 1
				endif
			elseif tLastAction == 5
				MessageEx "Surfing the Wave!"
				if (fwvq1.pxl > 5 || player.getAV Luck > 6 || GetRandomPercent < 30) && GetRandomPercent < 80 ; 20% chance to fail, 30% chance to succeed with bad stats
					set aSurfRwd to 1 + getRandomPercent * 2 / 100
					if aSurfRwd < 1
						set fwvq1.tShields to 100
						MessageEx "TARDIS Shield Oscillators Regenerated!"
						imod fwvSurfRepairISFX
						set aFx to 1
						set fxTimer to 0.0
					elseif aSurfRwd < 2
						set fwvq1.tFuel to 100
						MessageEx "TARDIS Artron Banks Replenished!"
						imod fwvSurfRefuelISFX
						set aFx to 1
						set fxTimer to 0.0
					endif
					set sRepeat to 0
				else
					MessageEx "Hull Breach! Damage Incurred!"
					PlaySound FXExplosionNukeSmall2D
					player.damageAV health 50
					set tDamageFx to 1
				endif
			endif
			set aTimer to 0.0
			if sRepeat > 0
				set sRepeat to sRepeat - 1
				set sRepeatedTimes to sRepeatedTimes + 1
				set pTimer to 0.0
				set fwvq1.csrON to 4
				set encounter to 1
				set anomaly to 1
			else
				set fwvq1.csrON to 1
				set fwvq1.done to 0
				set fwvq1.csrTimer to fwvq1.csrMaxTime - 1.0
				set encounter to 0
				set fwvqRooms.sNeverwereExist to 0
				set anomaly to 0
				set sSpecifiedType to 0
			endif
		endif
	elseif combat == 1																	 		;Combat section

		;during combat, disable navigated flight in Drift mode (fwvqDrift)
		if fwvqDrift.sDrift == 2 && wasDrifting < 1
			printc "Navigated Spaceflight was on, so we're turning it off temporarily"
			set wasDrifting to 1
			set fwvqDrift.sDrift to 0
		endif

		;player cooldown
		if pTimer < 5.0
			set pTimer to pTimer + fSecondsPassed
		endif

		;player responses
		if tAction == 1							;Offensive
			set tAttack to getRandomPercent
			if tAttack > enemyDef
				if eTimer > 4.0
					set mutualDmg to getRandomPercent / 4 + 10
				else
					set tDmg to getRandomPercent / 4 + 10
					if fwvq1.pxl > 5
						set pxlBonus to (fwvq1.pxl - 5)
					else
						set pxlBonus to 0
					endif
					printc "pxlBonus %g" pxlBonus
					printc "tDmg %g" tDmg
					set tDmg to tDmg + pxlBonus
					printc "tDmg now %g" tDmg					
					set enemyHP to enemyHP - tDmg
					ShowMessage fwvCombatOffensiveSuccessMessage tDmg
				endif
			else
				ShowMessage fwvCombatOffensiveFailMessage
			endif
			set pTimer to 0.0
			set tAction to 0
			set fwvq1.csrON to 4
		elseif tAction == 2						;Defensive
			set playerDefensive to 1
			ShowMessage fwvCombatDefensiveMessage 
			set pTimer to 0.0
			set tAction to 0
			set fwvq1.csrON to 4
		elseif tAction == 3						;Scan
			;ShowMessage fwvCombatScanMessage enemyHP enemyDef enemyCharge
			MessageBoxEx "%z%rEnemy HP: %g%%%rEnemy Defenses: %g%%%rTurns until Primary Weapons Charged: %g" enemyName enemyHP enemyDef enemyCharge
			set pTimer to 0.0
			set tAction to 0
			set fwvq1.csrON to 4
		elseif tAction == 4						;Evasive
			if evasion == 0 ; try to demat
				
				set tEvade to getRandomPercent
				set eEvade to getRandomPercent
				if tEvade > eEvade
					TriggerHitShader 5
					PlaySound fwvFXtardisLandingShort 1
					ShowMessage fwvCombatEvasiveMessage 
					set combat to 0
					set fwvq1.csrON to 0
				else
					ShowMessage fwvCombatEvasiveFailMessage 
					set evasion to 1
					set fwvq1.csrON to 4
				endif
			else ; phase shift
				set eTimer to eTimer + 3
				set tLastAction to 4
			endif
			set pTimer to 0.0
			set tAction to 0
		endif

		;ENEMY AI
		if eTimer < 5.0
			set eTimer to eTimer + fSecondsPassed
			if tLastAction == 4
				ShowMessage fwvCombatShiftChargeMessage
				set tLastAction to 0
			endif
		else
			;printc "Enemy Attacking!"

			if eval fwvqProtocols.protocol[10] == 1
				set looping to 1
				printc "Time Looping"
				if enemyHP > 0
					printc "last action"
					Goto eLastAction
				elseif enemyHP <= 0
					printc "enemy destroyed"
					MessageEx "[Time Loop Cancelled]"
					set fwvq1.tPower to fwvq1.tPower + fwvqProtocols.tempPower
					printc "%g power restored" fwvqProtocols.tempPower
					set fwvqProtocols.tempPower to 0
					let fwvqProtocols.protocol[10] := 0
					set eLastAction to 0
					Goto 40
				endif
			else
				set looping to 0
				if enemyHP >= 25

					;charge enemy weapons
					if enemyCharge > 0
						if tLastAction == 4
							set tLastAction to 0
							ShowMessage fwvCombatShiftChargeMessage
						else
							ShowMessage fwvCombatEnemyChargeMessage
						endif
						set enemyCharge to enemyCharge - 1
						Label 10
						set eLastAction to 10
						;enemy weapon is charged
					else
						if tLastAction == 4
							; Phase, skip turn
							set enemyCharge to iEnemyCharge
							ShowMessage fwvCombatShiftEnemyFireMessage
							set tLastAction to 0
						else
							Label 20
							set enemyDmg to getRandomPercent / 2 + 10

							;is TARDIS defenses boosted?
							if playerDefensive == 1
								if player.getAV Luck > getRandomPercent / 10 + 1
									set enemyDmg to enemyDmg / 2
									set enemyHP to enemyHP - enemyDmg
									set enemyDmg to 0
									ShowMessage fwvCombatEnemyDeflectedMessage enemyDmg
								else
									set tDamageFx to 1
									ShowMessage fwvCombatEnemyDeflectFailMessage 
								endif
								set playerDefensive to 0
							;Damage the TARDIS
							else
								set tDamageFx to 1
								ShowMessage fwvCombatEnemyDeflectFailMessage 
							endif
							set playerDefensive to 0
						;Damage the TARDIS
						else
							set enemyCharge to iEnemyCharge
							set tDamageFx to 1
							set eLastAction to 20
						endif
					endif

					set turnCount to turnCount + 1
					set eTimer to 0.0
					set combat to 1

				elseif enemyHP > 0

					Label 30
					;randomises chance of enemy teleporting aboard, or attacking
					set eChoice to getRandomPercent
					if eChoice > 50
						if tLastAction == 4
							; Phase, skip turn
							ShowMessage fwvCombatShiftEnemyBoardMessage
							set tLastAction to 0
						else
							if enemyType == 1
								set rSpawn to getRandomPercent
								if rSpawn < 33
									fwvCombatBoardingRef.placeAtMe fwvCrDalekSkaroDrone
								elseif rSpawn < 66
									fwvCombatBoarding2Ref.placeAtMe fwvCrDalekSkaroDrone
								elseif rSpawn < 100
									fwvCombatBoarding3Ref.placeAtMe fwvCrDalekSkaroDrone
								endif				
							elseif enemyType == 2
								set rSpawn to getRandomPercent
								if rSpawn < 33
									fwvCombatBoardingRef.placeAtMe fwvCrCyberman
								elseif rSpawn < 66
									fwvCombatBoarding2Ref.placeAtMe fwvCrCyberman
								elseif rSpawn < 100
									fwvCombatBoarding3Ref.placeAtMe fwvCrCyberman
								endif		
							elseif enemyType == 3
								set rSpawn to getRandomPercent
								if rSpawn < 33
									fwvCombatBoardingRef.placeAtMe fwvCrAlien
								elseif rSpawn < 66
									fwvCombatBoarding2Ref.placeAtMe fwvCrAlien
								elseif rSpawn < 100
									fwvCombatBoarding3Ref.placeAtMe fwvCrAlien
								endif		
							elseif enemyType == 4
								set rSpawn to getRandomPercent
								if rSpawn < 33
									fwvCombatBoardingRef.placeAtMe fwvTimeRaider01
								elseif rSpawn < 66
									fwvCombatBoarding2Ref.placeAtMe fwvTimeRaider01
								elseif rSpawn < 100
									fwvCombatBoarding3Ref.placeAtMe fwvTimeRaider01
								endif		
							elseif enemyType == 5
								set rSpawn to getRandomPercent
								if rSpawn < 33
									fwvCombatBoardingRef.placeAtMe fwvAutonDuplicate
								elseif rSpawn < 66
									fwvCombatBoarding2Ref.placeAtMe fwvAutonDuplicate
								elseif rSpawn < 100
									fwvCombatBoarding3Ref.placeAtMe fwvAutonDuplicate
								endif		
							endif
							set eLastAction to 30
							ShowMessage fwvCombatEnemyBoardedMessage 
							set eTimer to 0.0
						endif
					else
						if enemyCharge > 0																								;Charge weapons																						;Charge weapons
							if tLastAction == 4
								; Phase, skip turn
								ShowMessage fwvCombatShiftChargeMessage
								set tLastAction to 0
							else
								ShowMessage fwvCombatEnemyChargeMessage 
							endif
							set enemyCharge to enemyCharge - 1
						else																													;if charged, Fire weapons																								;if charged, Fire weapons
							if tLastAction == 4
								; Phase, skip turn
								ShowMessage fwvCombatShiftEnemyFireMessage
								set tLastAction to 0
							else
								set enemyDmg to getRandomPercent / 2 + 10															;randomise the damage
								if playerDefensive == 1																						;is TARDIS defense boosted?
									set enemyDmg to enemyDmg / 2
									set enemyHP to enemyHP - enemyDmg
									ShowMessage fwvCombatEnemyDeflectedMessage enemyDmg
									set playerDefensive to 0
									set enemyDmg to 0
								else																												;if TARDIS defense isnt boosted...
									set enemyCharge to iEnemyCharge																	;reset the charge count to its initial value
									set tDamageFx to 1
								endif
							endif
							set eLastAction to 20
						endif
					endif
					set eTimer to 0.0
					set combat to 1
				else
					Label 40
					set looping to 0
					set reward to 1
					set rChance to getRandomPercent
					set eTimer to 0.0
					set combat to 0	
					set fwvq1.done to 0
					set encounter to 0
					set fwvq1.csrON to 0
					ShowMessage fwvCombatSuccessfulMessage 
				endif
			endif
		endif
	endif
	
	if mutualDmg > 0 && reward == 0
		if rCurExplosion == 0
			; control to explode
			set sRandCtrl to GetRandomPercent * 8 / 100
			if sRandCtrl == 0
				set rRandCtrlRef to fwvq1.rTChelmicRef1
			elseif sRandCtrl == 2
				set rRandCtrlRef to fwvq1.rTCatomicRef1
			elseif sRandCtrl == 3
				set rRandCtrlRef to fwvq1.rTCpointerRef1
			elseif sRandCtrl == 4
				set rRandCtrlRef to fwvq1.rTCvortexRef1
			elseif sRandCtrl == 5
				set rRandCtrlRef to fwvq1.rTCzigzagRef1
			elseif sRandCtrl == 6
				set rRandCtrlRef to fwvq1.rTCnavicompRef1
			elseif sRandCtrl == 7
				set rRandCtrlRef to fwvq1.rTCgyroRef1
			endif
			
			; just reuse sRandCtrl to get an explosion
			set sRandCtrl to GetRandomPercent * 3 / 100
			if sRandCtrl == 0
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion 1
			elseif sRandCtrl == 1
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion2 1
			elseif sRandCtrl == 2
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion3 1
			endif
			set fExplosionTimer to 0.0
		else
			set fExplosionTimer to fExplosionTimer + fSecondsPassed
			if IsFormValid rCurExplosion == 0 || fExplosionTimer >= 3.0
				
				; TARDIS is damaging the enemy at the same time
				if fwvq1.tShields > 0
					set fCalc to mutualDmg * 2.5
					set fwvq1.tShields to fwvq1.tShields - mutualDmg
					set enemyHP to enemyHP - fCalc
					ShowMessage fwvCombatOffensiveCriticalShieldsSuccessMessage fCalc mutualDmg
				else
					set fCalc to mutualDmg * 2.5
					set fwvq1.tShields to 0
					set fwvq1.tHull to fwvq1.tHull - mutualDmg
					if fwvqSystems.tAdvanced == 1
						Call fwvFuncDamageSystemsFunction
					endif
					set enemyHP to enemyHP - fCalc
					ShowMessage fwvCombatOffensiveCriticalHullSuccessMessage fCalc mutualDmg
				endif
				
				set mutualDmg to 0
			endif
		endif
		
	endif
	
	if enemyDmg > 0 && reward == 0
		if rCurExplosion == 0
			; control to explode
			set sRandCtrl to GetRandomPercent * 8 / 100
			if sRandCtrl == 0
				set rRandCtrlRef to fwvq1.rTChelmicRef1
			elseif sRandCtrl == 2
				set rRandCtrlRef to fwvq1.rTCatomicRef1
			elseif sRandCtrl == 3
				set rRandCtrlRef to fwvq1.rTCpointerRef1
			elseif sRandCtrl == 4
				set rRandCtrlRef to fwvq1.rTCvortexRef1
			elseif sRandCtrl == 5
				set rRandCtrlRef to fwvq1.rTCzigzagRef1
			elseif sRandCtrl == 6
				set rRandCtrlRef to fwvq1.rTCnavicompRef1
			elseif sRandCtrl == 7
				set rRandCtrlRef to fwvq1.rTCgyroRef1
			endif
			
			; just reuse sRandCtrl to get an explosion
			set sRandCtrl to GetRandomPercent * 3 / 100
			if sRandCtrl == 0
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion 1
			elseif sRandCtrl == 1
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion2 1
			elseif sRandCtrl == 2
				set rCurExplosion to rRandCtrlRef.PlaceAtMe fwvExpControlExplosion3 1
			endif
			set fExplosionTimer to 0.0
		else
			set fExplosionTimer to fExplosionTimer + fSecondsPassed
			if IsFormValid rCurExplosion == 0 || fExplosionTimer >= 3.0
				;if TARDIS defense isnt boosted...
				if fwvq1.pxl > 5
					set pxlBonus to (fwvq1.pxl - 5)
				else
					set pxlBonus to 0
				endif
				printc "pxlBonus %g" pxlBonus
				printc "enemyDmg %g" enemyDmg
				set enemyDmg to enemyDmg - pxlBonus
				printc "enemyDmg now %g" enemyDmg
				if fwvq1.tShields > 0
					set fwvq1.tShields to fwvq1.tShields - enemyDmg
					ShowMessage fwvCombatEnemyDmgShieldsMessage enemyDmg
				else
					set fwvq1.tShields to 0
					set fwvq1.tHull to fwvq1.tHull - enemyDmg
					if fwvqSystems.tAdvanced == 1
						Call fwvFuncDamageSystemsFunction
					endif
					ShowMessage fwvCombatEnemyDmgHullMessage enemyDmg
				endif
				set enemyCharge to iEnemyCharge	
				set enemyDmg to 0
				set eTimer to 0.0
			else
				set eTimer to 0.0
			endif
		endif
		
	endif
	
	if fwvq1.tShields <= 0
		set fwvq1.tShields to 0
	endif

	if reward == 1										;combat rewards

		if wasDrifting == 1
			printc "Combat is ended, so we're turning navigated flight back on"
			set fwvqDrift.sDrift to 2
			set wasDrifting to 0
		endif

		set button to getbuttonpressed
		if button == 0									;salvage
			set rItemID to enemyType - 1
			set rItem to ListGetNthForm fwvCombatRewardsListRev rItemID
			set rItemNumInt to Rand 50, 76
			printc "Random %g" rItemNumInt
			player.addItem rItem rItemNumInt
			set reward to 0
		elseif button == 1								;data
			set rChance to getRandomPercent

			if GetStage fwvqGameOfRassilon >= 20  ;Can do Galactic Travel, give a chance to unlock STCs
				if fwvqLocs.fwvLkarnVisited == 0 || (fwvqLocs.fwvLtrenzaloreVisited == 0 && fwvqTrenzalore.sTrenzaloreDestroyed == 0)
					if fwvqLocs.fwvLkarnVisited == 0
						set fwvqLocs.fwvLkarnVisited to 1
						ShowMessage fwvCombatRewardLocKarnMessage
					elseif fwvqLocs.fwvLtrenzaloreVisited == 0
						set fwvqLocs.fwvLtrenzaloreVisited to 1
						ShowMessage fwvCombatRewardLocTrenzaloreMessage
					endif
					set reward to 0
				elseif rChance < 50	
					rewardXP 150
					MessageEx "[Alien data acquired, XP rewarded]"
					set reward to 0
				else
					set fwvq1.pxl to fwvq1.pxl + 1
					MessageEx "[Alien data acquired, Piloting skill awarded]"
					ShowMessage fwvTardisPilotSkillMessage fwvq1.pxl 
					PlaySound UILevelUp
					PlaySound UILevelUpText
					set fwvq1.pxp to 0	
					set reward to 0
				endif
			else   ;do NOT give a chance to get STCs, cannot get to Galaxies
				if rChance < 50	
					rewardXP 150
					MessageEx "[Alien data acquired, XP rewarded]"
					set reward to 0
				else
					set fwvq1.pxl to fwvq1.pxl + 1
					MessageEx "[Alien data acquired, Piloting skill awarded]"
					ShowMessage fwvTardisPilotSkillMessage fwvq1.pxl 
					PlaySound UILevelUp
					PlaySound UILevelUpText
					set fwvq1.pxp to 0	
					set reward to 0
				endif	
			endif
			
		endif
	endif

	if tDamageFx == 1
		if sRandCtrl == 0
			set rRandCtrlRef to rTChelmicRef1
		elseif sRandCtrl == 2
			set rRandCtrlRef to rTCatomicRef1
		elseif sRandCtrl == 3
			set rRandCtrlRef to rTCpointerRef1
		elseif sRandCtrl == 4
			set rRandCtrlRef to rTCvortexRef1
		elseif sRandCtrl == 5
			set rRandCtrlRef to rTCzigzagRef1
		elseif sRandCtrl == 6
			set rRandCtrlRef to rTCnavicompRef1
		elseif sRandCtrl == 7
			set rRandCtrlRef to rTCgyroRef1
		endif

		if fwvqSystems.tAdvanced == 1
			Call fwvFuncDamageSystemsFunction
		endif
						
		; just reuse sRandCtrl to get an explosion
		set sRandCtrl to GetRandomPercent * 3 / 100
		if sRandCtrl == 0
			rRandCtrlRef.PlaceAtMe fwvExpControlExplosion 1
		elseif sRandCtrl == 1
			rRandCtrlRef.PlaceAtMe fwvExpControlExplosion2 1
		elseif sRandCtrl == 2
			rRandCtrlRef.PlaceAtMe fwvExpControlExplosion3 1
		endif
		set tDamageFx to 0
	endif

	if aFx == 1
		set fwvqRooms.fShakeAngleExtra to 0.0
		if fxTimer < 5.0
			set fxTimer to fxTimer + fsecondspassed
		else
			rImod fwvSurfRefuelISFX
			rImod fwvSurfRepairISFX
			set aFx to 0
			set fxTimer to 0.0
		endif
	endif

end
